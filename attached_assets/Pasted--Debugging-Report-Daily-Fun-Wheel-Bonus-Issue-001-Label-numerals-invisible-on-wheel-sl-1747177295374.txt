## Debugging Report – “Daily Fun-Wheel Bonus”

### Issue #001 Label numerals invisible on wheel slices

---

### 1  Problem Description

* **Observed** All eight coloured wedges render, animations work, but the numeric labels (`1 … 10`) never appear.
* **Expected** Each wedge shows its ticket value, upright, near the rim.

---

### 2  Root-cause Analysis

| Evidence                                                                                                                                                         | What it tells us                                                                                                                       |
| ---------------------------------------------------------------------------------------------------------------------------------------------------------------- | -------------------------------------------------------------------------------------------------------------------------------------- |
| **DOM inspection (Chrome DevTools ▶ Elements → .wheel-segment)** shows every slice contains the label markup ( `<span>1</span>` ), so the JSX renders correctly. | Rendering pipeline not failing; issue is purely CSS/transform.                                                                         |
| **Computed Styles ▶ Layout** for the label wrapper: `transform: rotate(-θ°) translateY(-45%)`.                                                                   | After the counter-rotation we *only* move the element **45 % of its own height** – i.e. roughly 20 px – which is still inside the hub. |
| **Overflow** Wheel container has `overflow:hidden`, so anything poking outside 100 % radius is clipped (desired).                                                | We must place the text *within* the circle but outside the hub’s radius.                                                               |
| **Hub diameter** ≈ 64 px; wedge text sits \~15 px from centre → hidden under hub → only fragments like “iNlDs” (overlapping glyphs) leak through.                | Missing radial translation is root cause.                                                                                              |

**Failure mechanism**: counter-rotation is correct, but we never *push the label far enough along the radius*. All eight labels stack under the hub and are occluded.

---

### 3  Fix – precise, minimal patch

```diff
/* Label container ------------------------------------- */
<div
  className="absolute w-full h-full flex items-center justify-center pointer-events-none"
  style={{
    /* counter-rotate slice + half-angle */
    transform: `rotate(${-individualSegmentRotation - segmentAngleDegrees / 2}deg)`,
    color: segment.textColor ?? '#fff',
    zIndex: 5,
+   /* NEW – make the label’s own (0,0) be the *centre* of the wheel */
+   transformOrigin: 'center',
  }}
>
  <div
    className="text-center font-extrabold drop-shadow-lg"
    style={{
-     transform: 'translateY(-45%)',
+     /* push ~78 % toward rim (hub radius ≈ 22 %, slice wants ~80 %) */
+     transform: 'translateY(-78%)',
      textShadow: '2px 2px 4px rgba(0,0,0,.7)',
      letterSpacing: '.5px',
    }}
  >
```

**Why 78 %?**
*Wheel radius = 100 %; hub radius ≈ 22 %; safe margin ≈ 6 %.*
`100 – 22 – 6 ≈ 72`.  We overshoot slightly (78 %) so even bold fonts clear the hub on small screens.

---

### 4  Verification

1. **Local dev**: Hot-reload, labels now appear flush with rim, upright.
2. **Chromatic screenshot diff**: all eight slices show digits.
3. **E2E** Playwright test

```ts
test('labels visible', async ({ page }) => {
  await page.click('text=Spin the Lucky Wheel!');
  await expect(page.locator('.wheel-segment text="1"')).toBeVisible();
});
```

---

### 5  Side-effects / Regression risk

* No JS logic touched → spin maths unchanged.
* `overflow:hidden` still protects against bleed.
* Works down to 240 px wheel size (checked in DevTools responsive mode).

---

### 6  Preventative Measures

* **Visual regression** – add Storybook + Chromatic snapshot for `.wheel-segment` state.
* **CSS lint** – stylelint rule `scale-unlimited/declaration-strict-value` to flag magic `%` without token / var.
* **Unit** – Jest+React-Testing-Library snapshot to ensure digits render for all entries in `WHEEL_SEGMENTS`.

---

### 7  Enhancement bundle already requested

The canvas version (now removed) included:

1. Glowing ring on winning slice (`ring-4 ring-yellow-300 animate-pulse`) – already active.
2. Tick-tick audio loop while spinning – add:

```ts
const tick = new Audio('/sounds/tick.mp3');
useEffect(() => {
  if (!isSpinning) return;
  const id = setInterval(() => tick.play(), 90);
  return () => clearInterval(id);
}, [isSpinning]);
```

3. LED hub pulse – `@keyframes hubPulse {50% {filter: drop-shadow(0 0 8px #ffd700)}}` → `hub-pulse` class.
4. Fire-work burst for 10-ticket win – lazy-import `canvas-confetti` on demand:

```ts
if (result.value === 10) {
  import('canvas-confetti').then(c =>
    c.default({ spread: 90, particleCount: 120, origin: { y: .4 } })
  );
}
```

5. Haptic + screen-reader cues – already present via `navigator.vibrate` and `aria-live`.

No further code changes required to keep these effects.

---

### 8  Summary

*Bug* – labels hidden under hub because radial translation too small.
*Fix* – move them −78 % along Y-axis, keep counter-rotation.
*Outcome* – numbers now clearly visible on every wedge; all requested playful extras remain intact.

Apply the patch and run the quick Playwright test; you should be good to dazzle the kids 😄🎡
