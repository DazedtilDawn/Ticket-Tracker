### 🎯 Problem recap

Even after adding the pointer and the  `+270 – midPoint`  rotation tweak, the slice under the star still doesn’t match the tickets reported (`spinResult`).
The mismatch is **exactly half a slice** off, so the value two slots clockwise from the pointer is reported.

### 🔍 Root cause

The line that computes the slice’s angular **mid-line** is off by `segmentSize / 2`.
In the current drawing code the **centre-line** of slice 0 is **due-east (0°)**.
Therefore the angular centre of slice `i` is simply:

```
midPoint = i × segmentSize
```

…but the code uses:

```ts
midPoint = i * segmentSize + segmentSize / 2   // ❌ shifts everything 22.5°
```

That half-slice slip is what puts the “3” under the pointer while the code thinks it hit “10”.

### ✅ One-line fix

```diff
- const midPoint    = randomIndex * segmentSize + segmentSize / 2;
+ const midPoint    = randomIndex * segmentSize;             // centre at 0°,45°,90°…
```

The rest of the formula stays the same:

```ts
const target = FULL_SPINS * 360 + 270 - midPoint;
```

### 🔗 Full snippet inside **handleSpinWheel()**

```ts
const segmentSize = 360 / WHEEL_SEGMENTS.length;
const FULL_SPINS  = 12;

const randomIndex = Math.floor(Math.random() * WHEEL_SEGMENTS.length);
const midPoint    = randomIndex * segmentSize;          // ← fixed
const target      = FULL_SPINS * 360 + 270 - midPoint;  // lands under star

setRotationDegrees(-25);                 // optional wind-up
setTimeout(() => setRotationDegrees(target), 50);
```

### 🧪 Quick verification grid

| Action                   | Expected                                                |
| ------------------------ | ------------------------------------------------------- |
| Mock `Math.random()` → 0 | Pointer shows slice “1” (grey) & `spinResult === 1`     |
| Mock `Math.random()` → 5 | Pointer shows slice “10” (purple) & `spinResult === 10` |
| Spin repeatedly          | Visual winner always equals toast / confetti value      |

*(If you’re using Jest/RTL, stub `global.Math.random = () => 0.625` to force index 5.)*

### 🛡️ Prevent it happening again

1. **Unit-test the angle resolver**

   ```ts
   expect(angleForIndex(0)).toBe(0);
   expect(angleForIndex(1)).toBeCloseTo(45);
   ```
2. **Inline comment** right above the calc:
   `// slice-0 mid-line sits at 0°, so centre = idx × segmentSize`
3. **Debug overlay** (dev-only): draw thin radial lines every `segmentSize` degrees so any future mis-alignments pop out instantly.

Patch that single line and your pointer, highlight pulse, and ticket count will always agree. Spin away! 🛞⭐
