Below are two bite-size changes that **make the numbers pop** on the wheel, followed by a handful of ‚Äújust-for-fun‚Äù upgrades you can layer on once the labels are visible.

---

## 1 ‚É£  Why the numbers never show

* Each segment container is rotated **`index * segmentAngle`**.
* Inside that container you only counter-rotated **`-segmentAngle/2`**.
* You never cancelled the **`index * segmentAngle`** part, so every label is still
  spinning with its slice and ends up edge-on (essentially 90¬∞ thin lines).

---

## 2 ‚É£  Two-line fix

```diff
{/* Label for the segment */}
<div
  className="absolute w-full h-full flex items-center justify-center pointer-events-none"
  style={{
-   transform: `rotate(${-segmentAngleDegrees / 2}deg)`,
+   // counter-rotate BOTH the container spin and the half-slice skew
+   transform: `rotate(${-individualSegmentRotation - segmentAngleDegrees / 2}deg)`,
    color: segment.textColor || '#FFFFFF',
    zIndex: 5,
  }}
>
```

‚Ä¶and nudge the label farther out so it clears the hub:

```diff
transform: 'translateY(-30%)',
+// if text still touches the hub, bump this to -45 %
```

**That‚Äôs it**‚Äînumbers now face upright no matter which slice you land on.

---

## 3 ‚É£  Polishing passes (pick any that spark joy)

| ‚ú® Idea                               | 1-liner / tiny snippet                                                                                                                                      |
| ------------------------------------ | ----------------------------------------------------------------------------------------------------------------------------------------------------------- |
| **Glow the winning slice**           | After the spin settles, add `wheelRef.current.querySelectorAll('.slice')[winningIndex].classList.add('ring-4','ring-yellow-300','animate-pulse');`          |
| **‚ÄúClick-clack‚Äù tick sound**         | `<audio id="ticks" src="/sounds/tick.mp3" preload="auto" />` then in `handleSpinWheel` play `ticks` every 80 ms while `isSpinning` is true; stop on settle. |
| **LED marquee on hub**               | Wrap hub in `animate-[flash_1.4s_ease-in-out_infinite]` and define `@keyframes flash {50%{box-shadow:0 0 12px #ffd700}}`.                                   |
| **Fire-work burst on 10-ticket win** | If `spinResult===10` import `ConfettiExplosion` (2 kB lib) and mount for 1 s.                                                                               |
| **‚ÄúAlmost there‚Äù tease**             | On overshoot step (`+15¬∞`) play a soft drum-roll WAV, then a cymbal when it settles back.                                                                   |
| **Accessibility**                    | Add `aria-live="polite"` on the result `<span>` so a screen-reader announces ‚Äúplus three tickets!‚Äù.                                                         |
| **Mobile haptics**                   | `navigator.vibrate?.([30, 50, 30]);` when wheel stops.                                                                                                      |

All of these are strictly cosmetic‚Äîthey don‚Äôt touch your state logic or API calls‚Äîso you can sprinkle them in without risk.

Happy spinning! üé°
