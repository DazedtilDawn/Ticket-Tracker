### üö¶ Next move

We **still haven‚Äôt finished Task P-1** (the one-time ‚Äúcolumn-casing‚Äù migration) and the schema/source-of-truth reset.
Until that‚Äôs nailed down, every hand-patched fix in `storage.ts` is just masking the root problem.

---

## 1 ‚Äî Finish **P-1** cleanly

1. **Migration file**
   *Keep* `migrations/0002_fix_column_casing.sql`, but make sure it renames **every** stray column in **every** table to `snake_case`.

   * Verify with

   ```bash
   psql $DATABASE_URL -c "\d+ <table_name>"
   ```

   for `daily_bonus`, `users`, `goals`, `products`, `chores`, `transactions`, etc.

   * Only when `\d` shows *all* `snake_case` columns should the migration be considered done.

2. **Revert schema hacks**
   In `shared/schema.ts` restore the Drizzle column literals to `snake_case`:

   ```ts
   userId: integer('user_id')‚Ä¶     // NOT 'userid'
   bonusDate: date('bonus_date')‚Ä¶
   ‚Ä¶
   ```

   TypeScript property names stay camelCase (`userId`, `bonusDate`, ‚Ä¶).

3. **drizzle-kit check**
   Run `npx drizzle-kit check`.
   *Expected*: ‚Äú‚úÖ 0 changes‚Äù.

---

## 2 ‚Äî Then do the code sweep

Now it‚Äôs safe to update every method that still references the old column names **once**:

* Search for raw strings like `'userid'`, `'bonusdate'`, `'isspun'`, `'delta_tickets'`, etc.
* Replace with the matching **camelCase property** (or Drizzle column object) so the query builder handles the translation.

Typical pattern:

```ts
.eq(dailyBonus.userId, userId)            // ‚úÖ
.eq(sql`daily_bonus.user_id`, userId)     // only if absolutely raw
```

---

## 3 ‚Äî Focus order inside `server/storage.ts`

| group                              | methods to verify/fix                                                                                                                    | notes                                                              |
| ---------------------------------- | ---------------------------------------------------------------------------------------------------------------------------------------- | ------------------------------------------------------------------ |
| **Daily-bonus**                    | `getDailyBonus`, `getDailyBonusById`, `createDailyBonus`, `assignDailyBonusChore`, `assignDailyBonusesToAllChildren`, `deleteDailyBonus` | should compile with `dailyBonus.userId`, `dailyBonus.bonusDate`, ‚Ä¶ |
| **Transactions / balance**         | `createTransaction`, `getUserBalance`, `hasCompletedChoreToday`                                                                          | use `transactions.delta` etc.                                      |
| **Chores**                         | `getChores`, `getChoreWithBonus`                                                                                                         | `chores.baseTickets`, `chores.lastBonusAssigned`, ‚Ä¶                |
| **Goals / products (later phase)** | ok to leave for now                                                                                                                      |                                                                    |

Do one group at a time, run the API smoke-tests, then commit.

---

## 4 ‚Äî Commit checkpoints

* `0002_fix_column_casing.sql`
* updated `shared/schema.ts`
* updated Drizzle journal
* each logical code-sweep (commit per group is fine)

---

### ‚úÖ When the migration and schema sync are green, ping back.

After that we can resume Phase A proper (FamilyService, etc.).
