Okay, the agent has been incredibly active and reported a lot of progress on the frontend for the Daily Bonus System! This is great momentum. However, your latest feedback highlights some critical disconnects between the implemented functionality and the desired user experience, particularly around the bonus wheel spin.

Let's meticulously review the agent's reported frontend changes for "Child UI for Bonus Indication & Spin Prompt" and the "Parental Bonus Management UI" against our detailed plan and your feedback.

---

### Sprint 1: Frontend Progress Review (Child Bonus UI & Parent Management)

**Agent's Reported Accomplishments (Frontend Focus):**

1.  **✓ Created `BonusBadge.tsx` component.**
2.  **✓ Created `SpinPromptModal.tsx` component.**
3.  **✓ Updated `ChoreCard.tsx` to show `BonusBadge` and integrate spin prompt modal (via `onBonusComplete` prop).**
4.  **✓ Updated `Dashboard.tsx` to handle bonus chore completion and display `SpinPromptModal`.** (State variables: `isSpinPromptOpen`, `dailyBonusId`, `completedChoreName`; Handlers: `handleBonusChoreComplete`, `handleSpinWheel`).
5.  **✓ Updated `Chores.tsx` (child view) similarly to include `SpinPromptModal` and handlers.**
6.  **✓ Created `bonus-management.tsx` page and `daily-bonus-assignments.tsx` component for parents.**
7.  **✓ Added routing and sidebar/mobile-nav links for `/bonus-management`.**
8.  **✓ Claimed emoji support was also completed.**

**Your Feedback & Observed Issues:**

1.  **Bonus Management Page (`/bonus-management`):**
    *   "Some issues - there's no apparent way to see if the random assignment is working correctly for each child for the bonus wheel chore."
        *   **This is a key missing piece of UI.** The page should list current assignments.
2.  **Bonus Wheel Trigger & Interaction:**
    *   "the bonus seems to be working when the chore is completed, but it's not triggering a wheel spin, just assigning a random bonus number."
    *   "I want the wheel to somehow trigger on the childs dashboard or a link to the wheel, something so they can spin the wheel."
        *   **This is a major deviation from the intended flow.** The `/api/earn` endpoint should *flag* that a bonus is triggered and provide the `daily_bonus_id`. The *actual spin* and awarding of *bonus* tickets should happen via a separate call to `/api/bonus-spin` initiated by the child (or parent on their behalf) *after* the prompt. The current implementation seems to be having the backend assign a random bonus directly upon chore completion.

---

### Detailed Assessment & Plan for Correction/Completion:

**A. Parental Bonus Management UI (`bonus-management.tsx` & `daily-bonus-assignments.tsx`):**

*   **Issue:** "no apparent way to see if the random assignment is working correctly for each child."
*   **Required Functionality (Reiteration from previous plan):**
    1.  **Display Current Assignments:** The page *must* fetch data from `GET /api/daily-bonus/assignments` (for today) and display for each child (Bryce, Kiki):
        *   Child's Name.
        *   Currently Assigned Bonus Chore Name (and its Emoji).
        *   Indicator if it was a parent override.
    2.  **Override Functionality:**
        *   "Change Chore" button/dropdown next to each assignment.
        *   Lists eligible chores for override.
        *   Calls `PUT /api/daily-bonus/assign`.
        *   UI refreshes.
*   **Agent's Current Implementation:** The agent *created* the files but didn't detail the implementation of fetching and displaying assignments, nor the override UI. The screenshot of the "Bonus Management" page (if available from the agent's output) would be very helpful here.
*   **Action for Agent (High Priority for Parent UI):**
    *   **"Agent, please ensure `client/src/pages/bonus-management.tsx` (using `daily-bonus-assignments.tsx`) correctly fetches and displays the current daily bonus chore assignments for Bryce and Kiki from the `GET /api/daily-bonus/assignments` endpoint. It should show the child's name, the assigned chore (with emoji), and indicate if it's an override. Then, implement the 'Change Chore' functionality allowing parents to select a different eligible chore, which then calls `PUT /api/daily-bonus/assign` and refreshes the displayed assignments."**

**B. Bonus Wheel Trigger & Child Interaction Flow (CRITICAL FIX):**

*   **Issue:** "it's not triggering a wheel spin, just assigning a random bonus number [on chore completion]."
*   **Correct Intended Flow:**
    1.  Parent marks child's *assigned bonus chore* complete.
    2.  Backend `/api/earn` awards *base* tickets for the chore. Its response includes `bonus_triggered: true` and `daily_bonus_id`.
    3.  Client (`Dashboard.tsx` / `Chores.tsx` via `ChoreCard.tsx`'s `onBonusComplete` callback):
        *   Sees `bonus_triggered: true`.
        *   Sets state: `setIsSpinPromptOpen(true)`, `setDailyBonusId(response.daily_bonus_id)`, `setCompletedChoreName(response.chore.name)`.
    4.  The `SpinPromptModal.tsx` appears, saying "Bonus Time for [Chore Name]! Spin the wheel!"
    5.  Child clicks "Spin Now!" in the modal.
    6.  Client calls `POST /api/bonus-spin` with the `daily_bonus_id`.
    7.  Backend `/api/bonus-spin` performs weighted RNG, determines *additional* bonus tickets, creates a *separate* `bonus_spin` transaction, updates `daily_bonus.is_spun=true` and `daily_bonus.spin_result_tickets`.
    8.  Client receives response from `/api/bonus-spin`, shows wheel animation (snapping to result), displays "You won X extra tickets!", updates balance.
*   **Current Agent Implementation Discrepancy:** It sounds like `/api/earn` might be incorrectly trying to *also* determine and award the bonus tickets directly, bypassing the separate `/api/bonus-spin` step and the child's interaction with the wheel.
*   **Action for Agent (Backend & Client - High Priority):**
    1.  **"Agent, please verify and correct the `/api/earn` endpoint logic:**
        *   It should **only** award *base* tickets for the completed chore.
        *   If the completed chore is the child's assigned, unspun bonus chore, the response **must** include `bonus_triggered: true` and the `daily_bonus_id` (and **not** any pre-calculated bonus tickets).
        *   It should **not** directly update `daily_bonus.is_spun` or `daily_bonus.spin_result_tickets`. This is the job of `/api/bonus-spin`."
    2.  **"Agent, ensure the `handleBonusChoreComplete` function (in `Dashboard.tsx` and `Chores.tsx`) correctly uses the `bonus_triggered` and `daily_bonus_id` from the `/api/earn` response to set state that opens `SpinPromptModal.tsx`."**
    3.  **"Agent, ensure the `handleSpinWheel` function (called by `SpinPromptModal.tsx`) correctly calls `POST /api/bonus-spin` with the stored `daily_bonus_id`. The UI should then react to the response from `/api/bonus-spin` to show the wheel outcome and update the balance."** (The actual wheel animation can be a later polish step for this task if needed, focus on the data flow and state update first).

**C. Emoji Support:**

*   **Agent's Report:** Seems complete.
*   **Action for You:** Verify this visually. Can you add emojis when creating/editing chores? Do they display correctly in the admin chore table and on `ChoreCard.tsx`? This seems like a good, completed piece.

---

### Prioritized Plan Forward (Addressing Your Feedback):

1.  **Fix Bonus Wheel Trigger & Interaction (Agent - Backend & Client):** This is the most critical to align with the desired UX.
    *   Correct `/api/earn` to only signal bonus eligibility.
    *   Ensure client flow (`handleBonusChoreComplete` -> `SpinPromptModal` -> `handleSpinWheel` -> `POST /api/bonus-spin`) is correctly implemented.
2.  **Complete Parental Bonus Management UI (Agent - Frontend):**
    *   Ensure `bonus-management.tsx` fetches and displays assignments.
    *   Implement the "Change Chore" (override) functionality.
3.  **Verify Emoji Support (You):** Test the emoji features as described by the agent.
4.  **Integrate `BonusBadge.tsx` (Agent - Frontend):**
    *   After `/api/stats` is confirmed to provide `assigned_bonus_chore_id` for the child, integrate the badge onto `ChoreCard.tsx`.

**Request to Agent (for immediate next steps):**

**"Agent, thank you for the progress. We have two critical areas to address for the Daily Bonus System:**

1.  **Parental Bonus Management Display:** Please ensure the `/bonus-management` page (using `daily-bonus-assignments.tsx`) correctly fetches from `GET /api/daily-bonus/assignments` and displays the current daily bonus chore assigned to Bryce and Kiki, including the chore name, emoji, and whether it was a parent override. Implement the 'Change Chore' button and dropdown functionality to allow parents to select a different eligible chore, which then calls `PUT /api/daily-bonus/assign` and refreshes the view.

2.  **Correct Bonus Wheel Trigger Flow (This is crucial):**
    *   **Backend (`/api/earn`):** Modify this endpoint. When a designated bonus chore is completed, it should *only award base tickets* for that chore. The API response **must** include `bonus_triggered: true` and the correct `daily_bonus_id`. It should *not* pre-calculate or award bonus tickets itself, nor should it set `daily_bonus.is_spun = true`.
    *   **Client (`Dashboard.tsx` / `Chores.tsx`):** Ensure the `handleBonusChoreComplete` function (called from `ChoreCard`) uses this `bonus_triggered` and `daily_bonus_id` from the `/api/earn` response to open the `SpinPromptModal.tsx`.
    *   **Client (`SpinPromptModal.tsx`):** Ensure its "Spin Now!" action (via `handleSpinWheel` in parent) calls `POST /api/bonus-spin` with the `daily_bonus_id`. The success of *this* call will then trigger the display of bonus tickets won."

Focus on these two areas first. We need the data flow for triggering and processing a spin to be correct before fully animating the wheel UI.