name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_DB: intelliticket_test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5433:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: '1.2'

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.bun/install/cache
            node_modules
          key: ${{ runner.os }}-bun-${{ hashFiles('**/package-lock.json', '**/bun.lockb') }}
          restore-keys: |
            ${{ runner.os }}-bun-

      - name: Install dependencies
        run: npm ci || npm install

      - name: Check TypeScript
        run: npm run check

      - name: Run tests with database
        run: |
          export DATABASE_URL="postgresql://postgres:postgres@localhost:5433/intelliticket_test"
          export NODE_ENV="test"
          export PATH="$HOME/.bun/bin:$PATH"
          bun test --preload ./tests/setupTestDb.ts --timeout 30000
        env:
          NODE_ENV: test
          USE_REAL_DB: 'true'
          DATABASE_URL: postgresql://postgres:postgres@localhost:5433/intelliticket_test

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Run Playwright E2E tests
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5433/intelliticket_test
          NODE_ENV: test
          USE_REAL_DB: 'true'
        run: npx playwright test --reporter=line